[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Ville Lang√©n Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/Introduction.html","id":"overview","dir":"Articles","previous_headings":"","what":"1. Overview","title":"Introduction to tablestylizer","text":"tablestylizer provides set functions designed enhance styling formatting tables R. package particularly useful making tables suitable publication presentation. main functionalities tablestylizer can summarized following four functions: stylize_tableone(): function processes tableone object (generated CreateTableOne function tableone package) performs various operations make output suitable publication. stylize_p(): Rounds formats numeric values improved readability, designed presenting p-values statistical outputs. stylize1(): Stylizes numeric values highly custom rules aiming 1 decimal place. stylize2(): Stylizes numeric values highly custom rules aiming 2 decimal places.","code":""},{"path":"/articles/Introduction.html","id":"quick-showcase-from-raw-data-to-publication-ready-table","dir":"Articles","previous_headings":"","what":"2. Quick showcase: from raw data to publication-ready table","title":"Introduction to tablestylizer","text":"section demonstrates unparalleled ease efficiency creating publication-ready tables using tableone, flextable, tablestylizer packages. just simple commands, users can transform raw data visually appealing professionally formatted tables suitable academic journals similar purposes. Table 1. Characteristics (imaginary) study participants. Variable Value n 20 Age (years) 51.0 ¬± 21.2 Women 11 (55.0%) Height (inches) 68.3 ¬± 2.2 Likes coffee 8 (40.0%) Favorite color  ‚ÄÉ   Red 6 (30.0%) ‚ÄÉ   Green 7 (35.0%) ‚ÄÉ   Blue 7 (35.0%) Values means (standard deviations) continuous data numbers (percentages) categorical data.","code":"# Load the example dataset data(\"tablestylizer_df\", package = \"tablestylizer\")  ## Vectors for 1) all, 2) categorical variables  myVars <- c(\"Age (years)\", \"Women\", \"Height (inches)\", \"Likes coffee\", \"Favorite color\") catVars <- c(\"Women\", \"Likes coffee\", \"Favorite color\")  ## Create and store a tableone object my_df <- CreateTableOne(vars = myVars, data = tablestylizer_df, factorVars = catVars)  # Process the tableone object with stylize_tableone() my_df <- stylize_tableone(my_df)  # Create a flextable object ft <- my_df %>% flextable() %>% width(width = 2.5) %>%                   align(j = 2, align = \"center\", part = \"all\") %>%                    bold(part = \"header\", bold = TRUE) %>%                    add_header_lines(\"Table 1. Characteristics of the (imaginary) study participants.\") %>%                    add_footer_lines((\"Values are means (and standard deviations) for continuous data and numbers (and percentages) for categorical data.\")) %>%                   prepend_chunks(i = 7:9, j = 1, as_chunk(\"\\t\"))  # Display the ready table ft"},{"path":[]},{"path":"/articles/Introduction.html","id":"motivation","dir":"Articles","previous_headings":"3. Motivations and limitations","what":"3.1 Motivation","title":"Introduction to tablestylizer","text":"motivations developing tablestylizer package include, limited , following: Enhancing Tableone Functionality: tableone package valuable tool generating nearly publication-ready tables characteristics, additional tidying often required submission journal. Versatility Across Table Types: Many functions tablestylizer package limited ‚ÄúCharacteristics‚Äù tables can applied tables require tasks rounding, offering comprehensive set tools users working tabular data R. Eliminating Manual Tweaking: tablestylizer package aims nullify need transferring data external spreadsheet programs manual tweaking, streamlining data formatting process within R .","code":""},{"path":"/articles/Introduction.html","id":"limitations","dir":"Articles","previous_headings":"3. Motivations and limitations","what":"3.2 Limitations","title":"Introduction to tablestylizer","text":"Despite versatility, tablestylizer package comes certain limitations: Rounding Methodology: rounding method used package follows deliberately traditional arithmetic rounding, numbers ending .5 always round upwards. call ‚Äúhigh school rounding‚Äù reminiscent rounding method us learn school. approach, similar many popular programs like Excel employ, contrasts Base R, uses banker‚Äôs rounding. stylize_tableone() Function: present, stylize_tableone() function designed produce means ¬± SDs numbers (percentages) statistics. provide medians (IQRs). capability generate medians (IQRs) desired feature, may considered implementation future updates package.","code":""},{"path":"/articles/Introduction.html","id":"example-datasets-for-practicing","dir":"Articles","previous_headings":"","what":"4. Example datasets for practicing","title":"Introduction to tablestylizer","text":"facilitate exploration application stylize_tableone() function, tablestylizer package includes several example datasets.  ‚Äôs breakdown example datasets tablestylizer package:  Let‚Äôs skim first example dataset.  data presented can easily converted tableone object running code uses function CreateTableOne tableone package.  sake practice sessions, tableone object available example dataset object called tableone_1g tablestylizer package.","code":"# Load the example dataset data(\"tablestylizer_df\", package = \"tablestylizer\")  # Display the head of the dataset head(tablestylizer_df) #> # A tibble: 6 √ó 7 #>   ID    `Age (years)` Women `Height (inches)` `Likes coffee` `Favorite color` #>   <chr>         <int> <fct>             <dbl> <fct>          <fct>            #> 1 01               41 Yes                  67 No             Blue             #> 2 02               18 Yes                  67 No             Blue             #> 3 03               21 Yes                  67 No             Green            #> 4 04               73 Yes                  65 No             Red              #> 5 05               43 No                   69 No             Red              #> 6 06               70 Yes                  66 Yes            Green            #> # ‚Ñπ 1 more variable: Group <fct> ## Get variables names dput(names(tablestylizer_df)) #> c(\"ID\", \"Age (years)\", \"Women\", \"Height (inches)\", \"Likes coffee\",  #> \"Favorite color\", \"Group\")  ## Vector of all variables that shall be summarized by CreateTableOne myVars <- c(\"Age (years)\", \"Women\", \"Height (inches)\", \"Likes coffee\", \"Favorite color\", \"Group\")  ## Vector of categorical variables catVars <- c(\"Women\", \"Likes coffee\", \"Favorite color\", \"Group\")  ## Create and display tableone object CreateTableOne(vars = myVars, data = tablestylizer_df, factorVars = catVars) #>                               #>                               Overall       #>   n                              20         #>   Age (years) (mean (SD))     51.05 (21.24) #>   Women = Yes (%)                11 (55.0)  #>   Height (inches) (mean (SD)) 68.30 (2.23)  #>   Likes coffee = Yes (%)          8 (40.0)  #>   Favorite color (%)                        #>      Red                          6 (30.0)  #>      Green                        7 (35.0)  #>      Blue                         7 (35.0)  #>   Group (%)                                 #>      A                            5 (25.0)  #>      B                            8 (40.0)  #>      C                            7 (35.0)"},{"path":"/articles/Introduction.html","id":"tidying-up-tableone-objects-stylize_tableone","dir":"Articles","previous_headings":"","what":"5. Tidying up tableone objects: stylize_tableone()","title":"Introduction to tablestylizer","text":"stylize_tableone() function tablestylizer package designed enhance presentation tableone objects, making suitable publication presentation. ‚Äôs list stylize_tableone() : Moving Percentages: tableone package includes annotations ‚Äú(%)‚Äù percentages variable column. However, heavy annotations commonly found published manuscripts. stylize_tableone() addresses moving percentage annotations rightwards corresponding statistics columns. Handling Means SDs: Annotations like ‚Äú(mean (SD))‚Äù means standard deviations also repositioned rightwards formatted ‚Äúùë• ¬± ùë¶‚Äù. modification aligns typical presentation style many published works, improving overall readability table. P-value Formatting: default behavior tableone package expresses p-values 3 digits. However, many published works, p-values commonly presented 2 digits brevity clarity. stylize_tableone() function aligns convention, expressing p-values 2 digits whenever possible, providing standardized visually appealing format. Changing ‚ÄúOverall‚Äù ‚ÄúValue‚Äù: one group data, text ‚ÄúOverall‚Äù changed ‚ÄúValue‚Äù enhance clarity consistency table presentation.","code":""},{"path":"/articles/Introduction.html","id":"one-column-of-data","dir":"Articles","previous_headings":"5. Tidying up tableone objects: stylize_tableone()","what":"5.1 One column of data","title":"Introduction to tablestylizer","text":"Let‚Äôs look example dataset tableone_1g tablestylizer package. tableone_1g already tableone object format thus ready modified function stylize_tableone().  tableone object can now processed stylize_tableone().","code":"# Load the example dataset data(\"tableone_1g\", package = \"tablestylizer\")  # Display \"tableone_1g\" object tableone_1g #>                               #>                               Overall       #>   n                              20         #>   Age (years) (mean (SD))     51.05 (21.24) #>   Women = Yes (%)                11 (55.0)  #>   Height (inches) (mean (SD)) 68.30 (2.23)  #>   Likes coffee = Yes (%)          8 (40.0)  #>   Favorite color (%)                        #>      Red                          6 (30.0)  #>      Green                        7 (35.0)  #>      Blue                         7 (35.0)  #>   Group (%)                                 #>      A                            5 (25.0)  #>      B                            8 (40.0)  #>      C                            7 (35.0) # Process the tableone object, pipe it to print() command to align left stylize_tableone(tableone_1g) %>% print(right = FALSE) #>    Variable        Value       #> 1  n               20          #> 2  Age (years)     51.0 ¬± 21.2 #> 3  Women           11 (55.0%)  #> 4  Height (inches) 68.3 ¬± 2.2  #> 5  Likes coffee    8 (40.0%)   #> 6  Favorite color              #> 7     Red          6 (30.0%)   #> 8     Green        7 (35.0%)   #> 9     Blue         7 (35.0%)   #> 10 Group                       #> 11    A            5 (25.0%)   #> 12    B            8 (40.0%)   #> 13    C            7 (35.0%)"},{"path":"/articles/Introduction.html","id":"recoding-of-binary-variables","dir":"Articles","previous_headings":"5. Tidying up tableone objects: stylize_tableone()","what":"5.1.1 Recoding of binary variables","title":"Introduction to tablestylizer","text":"levels binary categorical factor variable need reversed, can accomplished easily. Base R can used purpose, simplest solution leverage forcats package. example, let‚Äôs change Likes coffee Dislikes coffee. numerous methods achieve , one straightforward solution reverse order factor levels. Let‚Äôs begin creating new factor variable, Likes coffee 2, order factor levels reversed.  examine data frame , might appear nothing changed. However, upon creating new tableone object data, ‚Äôll notice order levels altered.  Now, know effortlessly reproduce formatted table , Likes coffee variable reversed.","code":"# Load forcats library(forcats)  # Load the example dataset data(\"tablestylizer_df\", package = \"tablestylizer\")  # Create a new factor variable with reversed levels tablestylizer_df$`Likes coffee 2` <- fct_rev(tablestylizer_df$`Likes coffee`)  # Display head head(tablestylizer_df[,c(1,5,8)], n=5) #> # A tibble: 5 √ó 3 #>   ID    `Likes coffee` `Likes coffee 2` #>   <chr> <fct>          <fct>            #> 1 01    No             No               #> 2 02    No             No               #> 3 03    No             No               #> 4 04    No             No               #> 5 05    No             No ## Vector of all variables that shall be summarized by CreateTableOne myVars <- c(\"Likes coffee\", \"Likes coffee 2\")  ## Vector of categorical variables catVars <- c(\"Likes coffee\", \"Likes coffee 2\")  ## Create and display tableone object CreateTableOne(vars = myVars, data = tablestylizer_df, factorVars = catVars) #>                           #>                           Overall    #>   n                       20         #>   Likes coffee = Yes (%)   8 (40.0)  #>   Likes coffee 2 = No (%) 12 (60.0) # Load the example dataset data(\"tablestylizer_df\", package = \"tablestylizer\")  # Create a new factor variable with reversed levels tablestylizer_df$`Likes coffee 2` <- fct_rev(tablestylizer_df$`Likes coffee`)  ## Vector of all variables that shall be summarized by CreateTableOne myVars <- c(\"Age (years)\", \"Women\", \"Height (inches)\", \"Likes coffee 2\", \"Favorite color\", \"Group\")  ## Vector of categorical variables catVars <- c(\"Women\", \"Likes coffee 2\", \"Favorite color\", \"Group\")  ## Create and store a tableone object my_df <- CreateTableOne(vars = myVars, data = tablestylizer_df, factorVars = catVars)  # Display the tableone object my_df #>                               #>                               Overall       #>   n                              20         #>   Age (years) (mean (SD))     51.05 (21.24) #>   Women = Yes (%)                11 (55.0)  #>   Height (inches) (mean (SD)) 68.30 (2.23)  #>   Likes coffee 2 = No (%)        12 (60.0)  #>   Favorite color (%)                        #>      Red                          6 (30.0)  #>      Green                        7 (35.0)  #>      Blue                         7 (35.0)  #>   Group (%)                                 #>      A                            5 (25.0)  #>      B                            8 (40.0)  #>      C                            7 (35.0)  # Process the tableone object my_df <- stylize_tableone(my_df)  # Rename binary variables as desired my_df[5,1] <- \"Dislikes coffee\"  # Display the processed tableone object, pipe it to print() command to align left my_df %>% print(right = FALSE) #>    Variable        Value       #> 1  n               20          #> 2  Age (years)     51.0 ¬± 21.2 #> 3  Women           11 (55.0%)  #> 4  Height (inches) 68.3 ¬± 2.2  #> 5  Dislikes coffee 12 (60.0%)  #> 6  Favorite color              #> 7     Red          6 (30.0%)   #> 8     Green        7 (35.0%)   #> 9     Blue         7 (35.0%)   #> 10 Group                       #> 11    A            5 (25.0%)   #> 12    B            8 (40.0%)   #> 13    C            7 (35.0%)"},{"path":"/articles/Introduction.html","id":"several-columns-of-data","dir":"Articles","previous_headings":"5. Tidying up tableone objects: stylize_tableone()","what":"5.2 Several columns of data","title":"Introduction to tablestylizer","text":"Let‚Äôs take closer look example dataset tableone_3g provided tablestylizer package. dataset comprises subgroup data, presenting information across multiple columns.  stylize_tableone() function adeptly handles type tableone object.","code":"# Load the example dataset data(\"tableone_3g\", package = \"tablestylizer\")  # Display \"tableone_3g\" object tableone_3g #>                              Stratified by Group #>                               A             B             C             #>   n                               5             8             7         #>   Age (years) (mean (SD))     53.20 (23.91) 52.00 (23.64) 48.43 (19.54) #>   Women = Yes (%)                 1 (20.0)      5 (62.5)      5 (71.4)  #>   Height (inches) (mean (SD)) 69.60 (1.67)  68.50 (2.00)  67.14 (2.48)  #>   Likes coffee = Yes (%)          2 (40.0)      3 (37.5)      3 (42.9)  #>   Favorite color (%)                                                    #>      Red                          1 (20.0)      5 (62.5)      0 ( 0.0)  #>      Green                        2 (40.0)      2 (25.0)      3 (42.9)  #>      Blue                         2 (40.0)      1 (12.5)      4 (57.1) # Process the tableone object, pipe it to print() command to align left stylize_tableone(tableone_3g) %>% print(right = FALSE) #>   Variable        A           B           C           #> 1 n               5           8           7           #> 2 Age (years)     53.2 ¬± 23.9 52.0 ¬± 23.6 48.4 ¬± 19.5 #> 3 Women           1 (20.0%)   5 (62.5%)   5 (71.4%)   #> 4 Height (inches) 69.6 ¬± 1.7  68.5 ¬± 2.0  67.1 ¬± 2.5  #> 5 Likes coffee    2 (40.0%)   3 (37.5%)   3 (42.9%)   #> 6 Favorite color                                      #> 7    Red          1 (20.0%)   5 (62.5%)   0 (0.0%)    #> 8    Green        2 (40.0%)   2 (25.0%)   3 (42.9%)   #> 9    Blue         2 (40.0%)   1 (12.5%)   4 (57.1%)"},{"path":"/articles/Introduction.html","id":"between-group-comparison","dir":"Articles","previous_headings":"5. Tidying up tableone objects: stylize_tableone()","what":"5.2 Between-group comparison","title":"Introduction to tablestylizer","text":"Now, let‚Äôs examine example dataset tableone_3g_p provided tablestylizer package. Similar tableone_3g, dataset contains subgroup data. However, tableone_3g_p includes additional -group comparisons p-values. stylize_tableone() function seamlessly handles type tableone object. ‚Äôs noteworthy stylize_tableone() processes p-values using dedicated function called stylize_p(), also included tablestylizer package.  tableone object now ready undergo processing stylize_tableone().","code":"# Load the example dataset data(\"tableone_3g_p\", package = \"tablestylizer\")  # Display \"tableone_3g_\" object tableone_3g_p #>                              Stratified by Group #>                               A             B             C             p      #>   n                               5             8             7                #>   Age (years) (mean (SD))     53.20 (23.91) 52.00 (23.64) 48.43 (19.54)  0.925 #>   Women = Yes (%)                 1 (20.0)      5 (62.5)      5 (71.4)   0.181 #>   Height (inches) (mean (SD)) 69.60 (1.67)  68.50 (2.00)  67.14 (2.48)   0.162 #>   Likes coffee = Yes (%)          2 (40.0)      3 (37.5)      3 (42.9)   0.978 #>   Favorite color (%)                                                     0.106 #>      Red                          1 (20.0)      5 (62.5)      0 ( 0.0)         #>      Green                        2 (40.0)      2 (25.0)      3 (42.9)         #>      Blue                         2 (40.0)      1 (12.5)      4 (57.1)         #>                              Stratified by Group #>                               test #>   n                                #>   Age (years) (mean (SD))          #>   Women = Yes (%)                  #>   Height (inches) (mean (SD))      #>   Likes coffee = Yes (%)           #>   Favorite color (%)               #>      Red                           #>      Green                         #>      Blue # Process the tableone object, pipe it to print() command to align left stylize_tableone(tableone_3g_p) %>% print(right = FALSE) #>   Variable        A           B           C           p    test #> 1 n               5           8           7                     #> 2 Age (years)     53.2 ¬± 23.9 52.0 ¬± 23.6 48.4 ¬± 19.5 0.93      #> 3 Women           1 (20.0%)   5 (62.5%)   5 (71.4%)   0.18      #> 4 Height (inches) 69.6 ¬± 1.7  68.5 ¬± 2.0  67.1 ¬± 2.5  0.16      #> 5 Likes coffee    2 (40.0%)   3 (37.5%)   3 (42.9%)   0.98      #> 6 Favorite color                                      0.11      #> 7    Red          1 (20.0%)   5 (62.5%)   0 (0.0%)              #> 8    Green        2 (40.0%)   2 (25.0%)   3 (42.9%)             #> 9    Blue         2 (40.0%)   1 (12.5%)   4 (57.1%)"},{"path":"/articles/Introduction.html","id":"demonstration-of-the-stylize1-function","dir":"Articles","previous_headings":"","what":"6. Demonstration of the stylize1() function","title":"Introduction to tablestylizer","text":"chapter, showcase usage stylize1 function randomly generated data. Let‚Äôs examine following random data. random_df  preceding data presented polished, publication-ready format. now utilize stylize1 function enhance presentation column‚Äôs data display result .  Please note mutate_at() function dplyr package efficient method applying transformations across entire dataset.  Stylized Random Data","code":"stylized_data <- random_df %>%   mutate_at(vars(\"Group A\", \"Group B\", \"Group C\"), stylize1)  # Output the stylized dataframe using kable kable(stylized_data, caption = \"Stylized Random Data\")"},{"path":"/articles/Introduction.html","id":"demonstration-of-the-stylize2-function","dir":"Articles","previous_headings":"","what":"7. Demonstration of the stylize2() function","title":"Introduction to tablestylizer","text":"stylize2() functions similarly stylize1(), aims round values 2 decimals instead. Stylized Random Data","code":"stylized_data <- random_df %>%   mutate_at(vars(\"Group A\", \"Group B\", \"Group C\"), stylize2)  # Output the stylized dataframe using kable kable(stylized_data, caption = \"Stylized Random Data\")"},{"path":"/articles/Introduction.html","id":"demonstration-of-the-stylize_p-function","dir":"Articles","previous_headings":"","what":"8. Demonstration of the stylize_p() function","title":"Introduction to tablestylizer","text":"stylize_p() function designed round format numeric values, particularly improving readability statistical outputs. follows specific rules achieve : Values rounded 2 decimal places whenever feasible. function specifically avoids outputting ‚Äú0.05‚Äù, value may hold practical meaning reader significance level (alpha) set 0.05. rounded result equal ‚Äú0.050‚Äù, original value retained without rounding. original value (prior rounding) equal 0.050, original value retained without rounding. Values less 0.001 expressed ‚Äú<0.001‚Äù.  First, let‚Äôs examine regression results imaginary analysis.  random_regression_results  can now apply stylize2() beta SE columns stylize_p() P-values. Stylized Regression Results","code":"stylized_data <- random_regression_results %>%   mutate_at(vars(\"Beta\", \"SE\"), stylize2)  stylized_data <- stylized_data %>%   mutate_at(vars(\"P-value\"), stylize_p)  # Output the stylized dataframe using kable kable(stylized_data, caption = \"Stylized Regression Results\")"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ville Lang√©n. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lang√©n V (2024). tablestylizer: R Package Styling Formatting Tables. R package version 0.0.0.9000.","code":"@Manual{,   title = {tablestylizer: R Package for Styling and Formatting Tables},   author = {Ville Lang√©n},   year = {2024},   note = {R package version 0.0.0.9000}, }"},{"path":[]},{"path":"/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"R Package for Styling and Formatting Tables","text":"tablestylizer R package provides set functions styling formatting tables, making suitable publication. designed enhance visual appeal clarity tables generated R.","code":""},{"path":[]},{"path":"/index.html","id":"stylize_tableone-function","dir":"","previous_headings":"Key Features","what":"stylize_tableone() function:","title":"R Package for Styling and Formatting Tables","text":"Processes tableone object lean, publication-ready format. Converts rownames column names, transfers percentage symbols, removes unnecessary symbols. p-value column present, processed using stylize_p() function.","code":""},{"path":"/index.html","id":"stylize_p-function","dir":"","previous_headings":"Key Features","what":"stylize_p() function:","title":"R Package for Styling and Formatting Tables","text":"Rounds formats p-values improved readability. function aims round values 2 decimal places whenever feasible. Values less 0.001 expressed ‚Äú<0.001‚Äù. Specifically avoids outputting ‚Äú0.05‚Äù, value may hold practical meaning reader significance level (alpha) set 0.05. round result equal ‚Äú0.050‚Äù, original value given without rounding. original value (prior rounding) equal 0.050, original value given without rounding.","code":""},{"path":"/index.html","id":"usage","dir":"","previous_headings":"Key Features > stylize_p() function:","what":"Usage:","title":"R Package for Styling and Formatting Tables","text":"","code":"stylize_p(0.05795)  # Returns: \"0.06\" stylize_p(0.0499)   # Returns: \"0.0499\" stylize_p(0.002)    # Returns: \"0.002\" stylize_p(0.0005)   # Returns: \"<0.001\""},{"path":"/index.html","id":"stylize1-function","dir":"","previous_headings":"Key Features","what":"stylize1() function:","title":"R Package for Styling and Formatting Tables","text":"Stylizes numeric values according set custom rules. Rounds values 1 decimal place unless round smaller digit. Optional parameter specify threshold displaying values ‚Äú<threshold‚Äù. large small values expressed powers 10.","code":""},{"path":"/index.html","id":"usage-1","dir":"","previous_headings":"Key Features > stylize1() function:","what":"Usage:","title":"R Package for Styling and Formatting Tables","text":"","code":"stylize1(-0.05)   # Returns: \"-0.1\" stylize1(0.002)   # Returns: \"0.002\" stylize1(0.0005, 0.001)  # Returns: \"<0.001\""},{"path":"/index.html","id":"stylize2-function","dir":"","previous_headings":"Key Features","what":"stylize2() function:","title":"R Package for Styling and Formatting Tables","text":"Similar stylize1(), function stylizes numeric values according custom rules, aiming 2 decimal places. large small values expressed powers 10. Optional parameter specify threshold displaying values ‚Äú<threshold‚Äù.","code":""},{"path":"/index.html","id":"usage-2","dir":"","previous_headings":"Key Features > stylize2() function:","what":"Usage:","title":"R Package for Styling and Formatting Tables","text":"","code":"stylize2(-0.05)   # Returns: \"-0.10\" stylize2(0.002)   # Returns: \"0.002\" stylize2(0.0005, 0.001)  # Returns: \"<0.001\""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R Package for Styling and Formatting Tables","text":"","code":"# Install the development version from GitHub devtools::install_github(\"vljlangen/tablestylizer\")"},{"path":"/reference/stylize1.html","id":null,"dir":"Reference","previous_headings":"","what":"Stylize Numeric Values with Custom Rules (Aiming for 1 Decimal) ‚Äî stylize1","title":"Stylize Numeric Values with Custom Rules (Aiming for 1 Decimal) ‚Äî stylize1","text":"Stylizes numeric values according set custom rules. Rounds values 1 decimal place unless round smaller digit. Optional parameter specify threshold displaying values \"<threshold\". large small values expressed powers 10.","code":""},{"path":"/reference/stylize1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stylize Numeric Values with Custom Rules (Aiming for 1 Decimal) ‚Äî stylize1","text":"","code":"stylize1(x, threshold = NULL)"},{"path":"/reference/stylize1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stylize Numeric Values with Custom Rules (Aiming for 1 Decimal) ‚Äî stylize1","text":"x Numeric value stylized.","code":""},{"path":"/reference/stylize1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stylize Numeric Values with Custom Rules (Aiming for 1 Decimal) ‚Äî stylize1","text":"character string representing stylized value.","code":""},{"path":"/reference/stylize1.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Stylize Numeric Values with Custom Rules (Aiming for 1 Decimal) ‚Äî stylize1","text":"Ville Lang√©n","code":""},{"path":"/reference/stylize1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stylize Numeric Values with Custom Rules (Aiming for 1 Decimal) ‚Äî stylize1","text":"","code":"stylize1(-0.05) #> [1] \"-0.1\" # Returns: \"-0.1\"  stylize1(0.002) #> [1] \"0.002\" # Returns: \"0.002\"  stylize1(0.0005) #> [1] \"0.001\" # Returns: \"<0.001\""},{"path":"/reference/stylize2.html","id":null,"dir":"Reference","previous_headings":"","what":"Stylize Numeric Values with Custom Rules (Aiming for 2 Decimals) ‚Äî stylize2","title":"Stylize Numeric Values with Custom Rules (Aiming for 2 Decimals) ‚Äî stylize2","text":"Stylizes numeric values according set custom rules. Rounds values 2 decimal place unless round smaller digit. Optional parameter specify threshold displaying values \"<threshold\". large small values expressed powers 10.","code":""},{"path":"/reference/stylize2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stylize Numeric Values with Custom Rules (Aiming for 2 Decimals) ‚Äî stylize2","text":"","code":"stylize2(x, threshold = NULL)"},{"path":"/reference/stylize2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stylize Numeric Values with Custom Rules (Aiming for 2 Decimals) ‚Äî stylize2","text":"x Numeric value stylized.","code":""},{"path":"/reference/stylize2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stylize Numeric Values with Custom Rules (Aiming for 2 Decimals) ‚Äî stylize2","text":"character string representing stylized value.","code":""},{"path":"/reference/stylize2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Stylize Numeric Values with Custom Rules (Aiming for 2 Decimals) ‚Äî stylize2","text":"Ville Lang√©n","code":""},{"path":"/reference/stylize2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stylize Numeric Values with Custom Rules (Aiming for 2 Decimals) ‚Äî stylize2","text":"","code":"stylize2(-0.05) #> [1] \"-0.05\" # Returns: \"-0.05\"  stylize2(0.002) #> [1] \"0.002\" # Returns: \"0.00\"  stylize2(0.0005) #> [1] \"0.001\" # Returns: \"<0.001\""},{"path":"/reference/stylize_p.html","id":null,"dir":"Reference","previous_headings":"","what":"Round and Format Numeric Values for Improved Readability ‚Äî stylize_p","title":"Round and Format Numeric Values for Improved Readability ‚Äî stylize_p","text":"function takes numeric value rounds/formats according specific rules improve readability, especially used p-values statistical outputs. function aims round values 2 decimal places whenever feasible. Specifically avoids outputting \"0.05\", value may hold practical meaning reader significance level (alpha) set 0.05. round result equal \"0.050\", original value given without rounding. original value (prior rounding) equal 0.050, original value given without rounding. Values less 0.001 expressed \"<0.001\".","code":""},{"path":"/reference/stylize_p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Round and Format Numeric Values for Improved Readability ‚Äî stylize_p","text":"","code":"stylize_p(x)"},{"path":"/reference/stylize_p.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Round and Format Numeric Values for Improved Readability ‚Äî stylize_p","text":"x Numeric value rounded formatted.","code":""},{"path":"/reference/stylize_p.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Round and Format Numeric Values for Improved Readability ‚Äî stylize_p","text":"character string representing rounded formatted value.","code":""},{"path":"/reference/stylize_p.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Round and Format Numeric Values for Improved Readability ‚Äî stylize_p","text":"Ville Lang√©n","code":""},{"path":"/reference/stylize_p.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Round and Format Numeric Values for Improved Readability ‚Äî stylize_p","text":"","code":"stylize_p(0.0499) #> [1] \"0.0499\" # Returns: \"0.0499\"  stylize_p(0.002) #> [1] \"0.002\" # Returns: \"0.002\"  stylize_p(0.0005) #> [1] \"<0.001\" # Returns: \"<0.001\""},{"path":"/reference/stylize_tableone.html","id":null,"dir":"Reference","previous_headings":"","what":"Processes a tableone object to a lean, more publication-ready format ‚Äî stylize_tableone","title":"Processes a tableone object to a lean, more publication-ready format ‚Äî stylize_tableone","text":"function takes tableone object performs various operations make output suitable publication. includes converting rownames column names, transferring percentage symbols, removing unnecessary symbols, rounding p-values using stylize_p function.","code":""},{"path":"/reference/stylize_tableone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Processes a tableone object to a lean, more publication-ready format ‚Äî stylize_tableone","text":"","code":"stylize_tableone(table1)"},{"path":"/reference/stylize_tableone.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Processes a tableone object to a lean, more publication-ready format ‚Äî stylize_tableone","text":"table1 tableone object generated CreateTableOne.","code":""},{"path":"/reference/stylize_tableone.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Processes a tableone object to a lean, more publication-ready format ‚Äî stylize_tableone","text":"data frame representing processed tableone object.","code":""},{"path":[]},{"path":"/reference/stylize_tableone.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Processes a tableone object to a lean, more publication-ready format ‚Äî stylize_tableone","text":"Ville Lang√©n","code":""},{"path":"/reference/stylize_tableone.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Processes a tableone object to a lean, more publication-ready format ‚Äî stylize_tableone","text":"","code":"# Assuming you already have a 'table1' object from CreateTableOne # table1 <- CreateTableOne(data = your_data, strata = \"strata_var\", ...)  # Call the custom function to process the tableone object stylized_table1 <- stylize_tableone(table1) #> Error in eval(expr, envir, enclos): object 'table1' not found  # Now 'stylized_table1' contains the result of all the operations"},{"path":"/reference/tableone_1g.html","id":null,"dir":"Reference","previous_headings":"","what":"Example tableone Object with Imaginary Demographic Data for Practicing with the tablestylizer Package ‚Äî tableone_1g","title":"Example tableone Object with Imaginary Demographic Data for Practicing with the tablestylizer Package ‚Äî tableone_1g","text":"dataset example tableone object created using tableone package, representing summary table characteristics. generated based dataset \"tablestylizer_df\" format list components continuous (ContTable) categorical (CatTable) variables. Users can practice explore functionality tablestylizer package tidying table tablestylizer::stylize_tableone() function. Note table, data presented \"Overall\" column, without dividing Groups , B, C.","code":""},{"path":"/reference/tableone_1g.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example tableone Object with Imaginary Demographic Data for Practicing with the tablestylizer Package ‚Äî tableone_1g","text":"","code":"tableone_1g"},{"path":"/reference/tableone_1g.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example tableone Object with Imaginary Demographic Data for Practicing with the tablestylizer Package ‚Äî tableone_1g","text":"example tableone object following components: ContTable Summary statistics continuous variables (Age (years), Height (inches)). CatTable Summary statistics categorical variables (Women, Likes coffee, Favorite color, Group). MetaData Metadata information, including variable types labels.","code":""},{"path":"/reference/tableone_1g.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example tableone Object with Imaginary Demographic Data for Practicing with the tablestylizer Package ‚Äî tableone_1g","text":"data generated purpose providing practice example tableone object learning experimenting tablestylizer package. represent real-world individuals situations.","code":""},{"path":"/reference/tableone_1g.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example tableone Object with Imaginary Demographic Data for Practicing with the tablestylizer Package ‚Äî tableone_1g","text":"","code":"tableone_1g #>                               #>                               Overall       #>   n                              20         #>   Age (years) (mean (SD))     51.05 (21.24) #>   Women = Yes (%)                11 (55.0)  #>   Height (inches) (mean (SD)) 68.30 (2.23)  #>   Likes coffee = Yes (%)          8 (40.0)  #>   Favorite color (%)                        #>      Red                          6 (30.0)  #>      Green                        7 (35.0)  #>      Blue                         7 (35.0)  #>   Group (%)                                 #>      A                            5 (25.0)  #>      B                            8 (40.0)  #>      C                            7 (35.0)"},{"path":"/reference/tableone_3g.html","id":null,"dir":"Reference","previous_headings":"","what":"Example tableone Object with Imaginary Demographic Data for Practicing with the tablestylizer Package ‚Äî tableone_3g","title":"Example tableone Object with Imaginary Demographic Data for Practicing with the tablestylizer Package ‚Äî tableone_3g","text":"dataset example tableone object created using tableone package, representing summary table characteristics. generated based dataset \"tablestylizer_df\" format list components continuous (ContTable) categorical (CatTable) variables. table stratified three groups: , B, C. group, table provides summary statistics continuous variables (Age (years), Height (inches)) categorical variables (Women, Likes coffee, Favorite color). Users can practice explore functionality tablestylizer package tidying table tablestylizer::stylize_tableone() function.","code":""},{"path":"/reference/tableone_3g.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example tableone Object with Imaginary Demographic Data for Practicing with the tablestylizer Package ‚Äî tableone_3g","text":"","code":"tableone_3g"},{"path":"/reference/tableone_3g.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example tableone Object with Imaginary Demographic Data for Practicing with the tablestylizer Package ‚Äî tableone_3g","text":"example tableone object following components: ContTable Summary statistics continuous variables (Age (years), Height (inches)) stratified Groups , B, C. CatTable Summary statistics categorical variables (Women, Likes coffee, Favorite color) stratified Groups , B, C. MetaData Metadata information, including variable types labels.","code":""},{"path":"/reference/tableone_3g.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example tableone Object with Imaginary Demographic Data for Practicing with the tablestylizer Package ‚Äî tableone_3g","text":"data generated purpose providing practice tableone object multiple strata learning experimenting tablestylizer package. represent real-world individuals situations.","code":""},{"path":"/reference/tableone_3g.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example tableone Object with Imaginary Demographic Data for Practicing with the tablestylizer Package ‚Äî tableone_3g","text":"","code":"tableone_3g #>                              Stratified by Group #>                               A             B             C             #>   n                               5             8             7         #>   Age (years) (mean (SD))     53.20 (23.91) 52.00 (23.64) 48.43 (19.54) #>   Women = Yes (%)                 1 (20.0)      5 (62.5)      5 (71.4)  #>   Height (inches) (mean (SD)) 69.60 (1.67)  68.50 (2.00)  67.14 (2.48)  #>   Likes coffee = Yes (%)          2 (40.0)      3 (37.5)      3 (42.9)  #>   Favorite color (%)                                                    #>      Red                          1 (20.0)      5 (62.5)      0 ( 0.0)  #>      Green                        2 (40.0)      2 (25.0)      3 (42.9)  #>      Blue                         2 (40.0)      1 (12.5)      4 (57.1)"},{"path":"/reference/tableone_3g_p.html","id":null,"dir":"Reference","previous_headings":"","what":"Example tableone Object with Imaginary Data and Between-Group Comparison Test Results for Practicing with the tablestylizer Package ‚Äî tableone_3g_p","title":"Example tableone Object with Imaginary Data and Between-Group Comparison Test Results for Practicing with the tablestylizer Package ‚Äî tableone_3g_p","text":"dataset example tableone object created using tableone package, representing summary table characteristics. generated based dataset \"tablestylizer_df\" format list components continuous (ContTable) categorical (CatTable) variables. table stratified three groups: , B, C. group, table provides summary statistics continuous variables (Age (years), Height (inches)) categorical variables (Women, Likes coffee, Favorite color). Additionally, table includes -group comparison test results, including p-values. Users can practice explore functionality tablestylizer package tidying table tablestylizer::stylize_tableone() function.","code":""},{"path":"/reference/tableone_3g_p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example tableone Object with Imaginary Data and Between-Group Comparison Test Results for Practicing with the tablestylizer Package ‚Äî tableone_3g_p","text":"","code":"tableone_3g_p"},{"path":"/reference/tableone_3g_p.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example tableone Object with Imaginary Data and Between-Group Comparison Test Results for Practicing with the tablestylizer Package ‚Äî tableone_3g_p","text":"example tableone object following components: ContTable Summary statistics continuous variables (Age (years), Height (inches)) stratified Groups , B, C. CatTable Summary statistics categorical variables (Women, Likes coffee, Favorite color) stratified Groups , B, C. MetaData Metadata information, including variable types labels. pValues -group comparison test results, including p-values approximate exact tests.","code":""},{"path":"/reference/tableone_3g_p.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example tableone Object with Imaginary Data and Between-Group Comparison Test Results for Practicing with the tablestylizer Package ‚Äî tableone_3g_p","text":"data generated purpose providing practice tableone object multiple strata -group comparison test results learning experimenting tablestylizer package. represent real-world individuals situations.","code":""},{"path":"/reference/tableone_3g_p.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example tableone Object with Imaginary Data and Between-Group Comparison Test Results for Practicing with the tablestylizer Package ‚Äî tableone_3g_p","text":"","code":"tableone_3g_p #>                              Stratified by Group #>                               A             B             C             p      #>   n                               5             8             7                #>   Age (years) (mean (SD))     53.20 (23.91) 52.00 (23.64) 48.43 (19.54)  0.925 #>   Women = Yes (%)                 1 (20.0)      5 (62.5)      5 (71.4)   0.181 #>   Height (inches) (mean (SD)) 69.60 (1.67)  68.50 (2.00)  67.14 (2.48)   0.162 #>   Likes coffee = Yes (%)          2 (40.0)      3 (37.5)      3 (42.9)   0.978 #>   Favorite color (%)                                                     0.106 #>      Red                          1 (20.0)      5 (62.5)      0 ( 0.0)         #>      Green                        2 (40.0)      2 (25.0)      3 (42.9)         #>      Blue                         2 (40.0)      1 (12.5)      4 (57.1)         #>                              Stratified by Group #>                               test #>   n                                #>   Age (years) (mean (SD))          #>   Women = Yes (%)                  #>   Height (inches) (mean (SD))      #>   Likes coffee = Yes (%)           #>   Favorite color (%)               #>      Red                           #>      Green                         #>      Blue"},{"path":"/reference/tablestylizer_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Dataset with Imaginary Demographic Data for Practicing with the tablestylizer Package ‚Äî tablestylizer_df","title":"Example Dataset with Imaginary Demographic Data for Practicing with the tablestylizer Package ‚Äî tablestylizer_df","text":"dataset provides example fictional data related group individuals. includes information age, sex, height, coffee preferences, favorite color, group affiliation.","code":""},{"path":"/reference/tablestylizer_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Dataset with Imaginary Demographic Data for Practicing with the tablestylizer Package ‚Äî tablestylizer_df","text":"","code":"tablestylizer_df"},{"path":"/reference/tablestylizer_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Dataset with Imaginary Demographic Data for Practicing with the tablestylizer Package ‚Äî tablestylizer_df","text":"tibble 20 rows 7 variables: ID Unique identifier individual. Age (years) Age individuals years. Women Indicates whether individual female (Yes) (). Height (inches) Height individuals inches. Likes coffee Individuals' preference coffee (Yes ). Favorite color Favorite color individuals (Red, Green, Blue). Group Group affiliation individuals (, B, C).","code":""},{"path":"/reference/tablestylizer_df.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example Dataset with Imaginary Demographic Data for Practicing with the tablestylizer Package ‚Äî tablestylizer_df","text":"data generated purpose illustrating data manipulation analysis R. represent real-world individuals situations.","code":""},{"path":"/reference/tablestylizer_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example Dataset with Imaginary Demographic Data for Practicing with the tablestylizer Package ‚Äî tablestylizer_df","text":"","code":"head(tablestylizer_df) #> # A tibble: 6 √ó 7 #>   ID    `Age (years)` Women `Height (inches)` `Likes coffee` `Favorite color` #>   <chr>         <int> <fct>             <dbl> <fct>          <fct>            #> 1 01               41 Yes                  67 No             Blue             #> 2 02               18 Yes                  67 No             Blue             #> 3 03               21 Yes                  67 No             Green            #> 4 04               73 Yes                  65 No             Red              #> 5 05               43 No                   69 No             Red              #> 6 06               70 Yes                  66 Yes            Green            #> # ‚Ñπ 1 more variable: Group <fct>"}]
